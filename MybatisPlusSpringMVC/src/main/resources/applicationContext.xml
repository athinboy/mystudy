<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">


    <!-- 采用注释的方式配置bean -->
    <context:annotation-config/>

    <!--<import resource="classpath*:/rabbitmq/applicationContext-RabbitMQ.xml"></import>-->
    <!--<import resource="classpath*:/redisson/applicationContext-Redission.xml"></import>-->


    <!-- aop动态代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 扫描注解对象 -->
    <context:component-scan base-package="org.fgq.study">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--&lt;!&ndash; 扫描注解对象 &ndash;&gt;-->
    <!--<context:component-scan base-package="org.fgq.study.service">-->
    <!--</context:component-scan>-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:mybatis/jdbc.properties</value>
                <!--<value>classpath*:cache/radis.properties</value>-->
                <!--<value>classpath*:applicationConfig.properties</value>-->
                <!--<value> classpath*:rabbitmq/rabbitmq.properties</value>-->
                <!--<value> classpath*:redisson/redisson.properties</value>-->
            </list>

        </property>
    </bean>


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="initialSize" value="${dbcp.initialSize}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${dbcp.validationQuery}"/>
        <property name="testWhileIdle" value="${dbcp.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="${dbcp.numTestsPerEvictionRun}"/>
        <property name="testOnReturn" value="${dbcp.testOnReturn}"/>
        <property name="maxActive" value="${dbcp.maxActive}"/>
        <property name="logAbandoned" value="${dbcp.logAbandoned}"/>
        <property name="removeAbandoned" value="${dbcp.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}"/>
    </bean>


    <!--开始mybatis plus 配置-->

    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="mybatis/mybatis-config.xml"></property>
        <property name="mapperLocations" value="mapperxml/**/*.xml"></property>
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.fgq.study.mbgmapper.mapper"/>
    </bean>


    <!--结束mybatis plus 配置-->

     <!--transaction support-->
     <!--PlatformTransactionMnager -->

    <!--<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
         <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!-- enable transaction annotation support -->
    <!--<tx:annotation-driven transaction-manager="txManager"/>-->




    <!-- 配置SqlSessionTemplate -->
    <!--<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
    <!--<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->


    <!-- spring上下文获取，可以得到各个bean的实体 -->
    <!--<bean id="SpringContextUtil" class="com.itl.core.tool.SpringToolInit"/>-->



</beans>
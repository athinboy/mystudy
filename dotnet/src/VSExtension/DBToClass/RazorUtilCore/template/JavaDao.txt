@using System.IO
@using System
@using System.Collections.Generic
@using System.Collections
@using Org.FGQ.CodeGenerate.Util.Code
package @Model.DaoPackageName;

import @Model.JavaClass.PackageName.@Model.JavaClass.ClassName;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;
@if(@Model.ForRead){
@:import @Model.VoClassFullName;
}

/**
 * @@Entity @Model.JavaClass.ClassName
 * Creator:fgq.generator
 * CreTime:@DateTime.Now
 */
@@Mapper
@@Repository
public interface @Model.DaoName {

@if(@Model.ForRead){
if(@Model.JavaClass.HasKeyField){
@:    @Model.VoClassName selectByKey(@CodeUtil.GetJavaKeyFieldsParaStr(@Model.JavaClass,true));
@:
@if(@Model.JavaClass.HasNoKeyLongIDField){
<text>    @Model.VoClassName selectByID(Long id);

</text>    
}
}
@foreach(var field in @Model.JavaClass.ParentKeyFields ){
@:    List<@Model.VoClassName> queryBy@(@field.Name.ToUpper())(@field.FiledTypeStr @field.Name);
@:
}
@:    Integer queryCountByParaMap(Map paraMap);
@:
@:    List<@Model.VoClassName> queryByParaMap(Map paramMap);
@:
@:    Integer queryCountByParaBean(@Model.BoClassName paraBean);
@:
@:    List<@Model.VoClassName> queryByParaBean(@Model.BoClassName paramBean);
}
@if(@Model.ForWrite){

@:    int deleteByPrimaryKey(@CodeUtil.GetJavaKeyFieldsParaStr(@Model.JavaClass,true));
@:
@foreach(var field in @Model.JavaClass.ParentKeyFields ){
@:    int deleteBy@(@field.Name.ToUpper())(@field.FiledTypeStr @field.Name);
@:
}
@:    int insert(@Model.JavaClass.ClassName record);
@:
@:    int insertSelective(@Model.JavaClass.ClassName record);
@:
@:    int updateByPrimaryKey(@Model.JavaClass.ClassName record);
@:
@:    int updateByPrimaryKeySelective(@Model.JavaClass.ClassName record);
}
}